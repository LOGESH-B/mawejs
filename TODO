NOTES

- Discussion about file types (.mawe, .mawe.gz, versioned file) moved
  to separate document (docs/FileTypes.txt).

-------------------------------------------------------------------------------

SHORT TERM TODO:

The main objective is to make versions working! That is needed urgently! It 
won't take long time when I need an editor, where I can store the existing 
version as a version, and use it to create new one.

So, aim for single-part editor, supporting body and notes sections, very
similar to current Python version. Support for multiple parts can be added 
later.

We can make very simple, notepad-like editor as a starting point! We can add
fancier features later. Basically, I first need editor to replace current Python 
version - in fact, not even that, as I can use the Python version for tasks that 
can not be done with Electron version yet.

TODO:

- Integrate file browser and editor parts together: file browser can be 
  used to select file, editor to edit it.

-------------------------------------------------------------------------------

VERSIONS:

- Modification time needed mainly when saving versions (so that you know
  when that version was modified last time) needs to be thought...

-------------------------------------------------------------------------------

FUTURE:

- Slack has nice feature: when you press arrow up at first line, it creates
  new empty line, if the first line has some formatting (e.g. <pre></pre>). We 
  could incorporate this feature to the editor, too.

- Import RTF: https://www.npmjs.com/package/rtf-parser - many writers Use
  Word or similar, and they can make RTFs.

- Borrow ideas to file browser from Dropbox web browser.

- Can we do / do we need fake app for test bench?

- Command line usage? It would be great if you could run the software without
  window, just from command line. It would give all sorts of great opportunities
  to integrate editor to other systems (e.g. automatic exports and other
  operations). You could basically make some automatic imports, too?

-------------------------------------------------------------------------------

DONE:

- Some kind of test bench for e.g. file operations would be great! That is,
  testing file loading & saving, directory scanning and so on.
      
--> it would be great, if file & document operations would work also
    in plain node (that is, without electron). I am sure that at Some
    point I like to have command line tools for e.g. exporting stories
    in different format.

- Make fake window to test code on plain node

- Get rid of body.modified - it makes version control very difficult.

- Check: load -> save --> produces same buffer. A more precise test
  needs to be created later.
