TODO:

-------------------------------------------------------------------------------

- What a heck? No Finnish spell checking on Chrome?!? No spellcheking based
  on lang attribute?!? Am I living 2019, or 1989? Well, according to bug
  reports and such, we just need to leave spellchecking for future. Browsers
  just don't have any hunch about the languages other than English, and their
  developers not any intention to fix it.

- Ctrl-Z looses focus as last thing: maybe the first item in the undo buffer
  is "got focus"?

-------------------------------------------------------------------------------

Ideas, and such:

- Maybe we could try scenes as breaks, not as containers? Just like we thought
  chapters and parts would work? This could be bit more friendly to text editing
  component... All in all, we need to find ways to compile different kinds of
  views (creating them from internal data, and updating internal data based on
  the edits).

- Folding! We could now try some "freeform" hide tool... It would make blocks
  (selections) hidden.

-------------------------------------------------------------------------------

General:

- What we know for sure, is that a story is a sequence of scenes.

- What we also know for sure, is that we need to be able to store metadata
  at various levels: for one scene, for a chapter, for entire story. We need
  to be able to link other documents to the story, for example, links to
  documents describing the backgrounds.

-------------------------------------------------------------------------------

Automation: Let's develop ideas where we can replace different kinds of
settings and such with automation.

- Can we implement "auto-spacing"? That is, when elements are shrink, they
  would also try to dense the content by using smaller line spacing and
  maybe smaller font? The other way to do this is to let user select the
  parameters...

-------------------------------------------------------------------------------

- Software needs to be organized so that it has "views": what editor needs
  most, is tools to view the story from different angles. Main view is
  "draft" view - it lets you edit your story close the same way as you down
  with regular text editors. But you need more: you need to be able to review
  the synopses, the structure of the story, and so on.

- It is important, that write aid tools are available when writing (if wanted).
  For example, it is good idea to have the synopses on the screen when working
  with scene.

- Lets not yet pay too much attention for editing the story. Lets first concentrate
  on creating views to a story. Lets then make those views "editable"

- NOTE: It should be easy to have "splitted" editor, that is, only chosen scenes
  would be visible. Give user tools to choose what parts of the text s/he is
  editing.

-------------------------------------------------------------------------------

Versions:

- We might decide so, that <body> has always a version tag. So, by default:

        <body version="master"> ... </body>

        <version name="master"> ... </version>
        <version name="X"> ... </version>

  ...You are editing "master" version of the story.

- This would allow us few things:

  1. "Saving" body to a version: Pressing Ctrl-S would update the corresponding
     version.
     
  2. Switching version: in this case, your <body> is changed to specific version,
     and its version-attribute is changed.
     
  3. Creating new versions: In this case, your <body> stays in the version it was
     but its content is copied as a new version.
     
  4. Version rename: for example, if you rename "master" to "1.0", if <body>
     is using that version, rename <body> tag, too.

- Initially, this sounds pretty consistent mechanism?

-------------------------------------------------------------------------------

Integration:

- First things first: we can develop the editor by using browser local
  storage, file drops and file downloads. We could integrate cloud storages
  (Google Drive and DropBox) later.

- Google Drive support: load & store stories from Google Drive, store
  project manager database to google drive. Export stories to google
  drive.

Project manager:

- Implement project manager

- Listing projects, filtering etc

- Online publishing? Integrated to project manager?

Publishing:

- Need to be designed. How to organize stories, and publish them e.g.
  in wordpress?

Import & Export:

- Loading and storing stories to Google Drive and similar.

- Export RTF

- Export EPUB

- Export HTML (for e.g. WordPress)

-------------------------------------------------------------------------------

Nice-to-have features:

- Opening multiple stories and moving scenes between them. This would be nice
  for splitting and merging stories.

-------------------------------------------------------------------------------

TODO: Small things:

- Drag'n'drop without mouse: Somehow, you should be able to grab your scene,
  and start moving it around. Maybe "move up" / "move down" functionality?

  - Maybe Alt-G (grab) enters a state where you can move scene around with
    cursor keys? Alt-G again would revert back to normal mode.
  
- Lose focus: Get rid of sheet focus to be able to go around with page
  up & down. Also, regain focus to somewhat nice spot?
  
-------------------------------------------------------------------------------

DONE:

- Browser (Chrome) find seems to work perfectly!
